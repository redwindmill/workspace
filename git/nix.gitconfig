#------------------------------------------------------------------- unix-like #

[user]
	name = ${GIT_FULLNAME}
	email = ${GIT_EMAIL}
	signingkey = ${GIT_GPGKEY}

[core]
	editor = vim
	eol	= native
	autocrlf = input
	whitespace = trailing-space
	pager = less

[diff]
	tool = vimdiff
	prompt = false

[commit]
	gpgsign = ${GIT_GPGSIGN}

[merge]
	tool = vimdiff

[fetch]
	prune = true

[pull]
	rebase = true

[push]
	default = simple

[protocol]
	version = 2

[color]
	ui = true

[alias]
	st = status
	fa = fetch --all --prune
	rf = reflog
	bi = bisect
	br = branch
	ba = branch -a
	brr = branch -r
	bd = branch -D
	bdr = push -d
	bc = checkout -b
	ch = checkout
	av = add --verbose
	ap = add --patch
	ci = commit
	ca = commit --amend
	cs = "!bash -c 'declare _B; echo -n \"branch (compare): \" && read _B; git rebase -i $(git merge-base HEAD \"${_B}\")'"
	us = restore --staged
	uw = restore --worktree
	ta = tag -a
	rt = remote -v
	pu = push
	pf = push --force
	pt = push --tags
	df = diff --minimal
	ds = diff --staged --minimal
	dc = show --show-signature
	lsu = ls-files --other
	lf = log --format=fuller --show-signature
	llf = log --format=fuller --show-signature -p

	alias = ! git config --get-regexp '^alias\\.' | sed -e 's/^alias\\.//' -e 's/\\ /\\ =\\ /' -e 's/\\(^.\\{1,60\\}\\).*/\\1/'
	lg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	llg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	tg = for-each-ref --sort='*authordate' --sort='-authordate' --format='%(if)%(*objectname)%(then)* %(color:blue bold)%(*objectname:short)%(color:reset) - %(color:green bold)(%(*authordate:short)) %(color:yellow bold)%(refname:short)%(color:reset) %(*subject) %(color:yellow bold)(%(subject))%(color:reset)%(else)+ %(color:blue bold)%(objectname:short)%(color:reset) - %(color:green bold)(%(authordate:short)) %(color:yellow bold)%(refname:short)%(color:reset) %(subject)%(end)' refs/tags
	pr-gitlab = "!bash -c 'declare _R _RT _B _T _D; echo -n \"remote: \" && read _R; echo -n \"target: \" && read _RT; echo -n \"title : \" && read _T; echo -n \"descr : \" && read _D; _B=\"$(git symbolic-ref --short HEAD 2>/dev/null)\"; git push --set-upstream \"${_R}\" \"${_B}\" -o merge_request.create -o merge_request.target=\"${_RT}\" -o merge_request.remove_source_branch -o merge_request.title=\"${_T}\" -o merge_request.description=\"${_D}\"'"
